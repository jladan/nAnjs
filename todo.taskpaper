Verification:
	- figure out a way to compare my results to trusted solutions.

Code Organization:
	- switch to using requirejs for module management
	- nAn is a good name, but not unique. Come up with a new name
	Potential Names:
		- compute.js
		- cMath.js
		- cm.js
		- simulate.js
		- Deez Nutz
		- sim.js

Numerical Analysis Library:

	Linear Algebra:
		- Create basic matrix object @done(2014-11-06)
		- code up matrix-vector @done(2014-11-06)
		- code up matrix-multiply @done(2014-11-06)
		- Transpose matrix @done(2014-11-06)
		- Decide on column-major vs. row-major
			It may be easier to do row-swapping for pivoting.
		- Matrix inversion
		- LU Decomposition
		- QR decomposition
	
	Root-Finding:
		- newton-raphson is most important
		- other fixed point methods might work too?
		- bisection method
		- 1D newton 
	
	Stochastics:
		- Stochastic solvers for ODE's
		- Create functions for means, variance, etc.
		- maybe some time-average and ensemble average stuff
		- Forward gillespie solver could be cool
		- perhaps higher order stochastic solvers


	ODE Solvers:
		- Add options for intrinsic and extrinsic noise
		- Explicit Runge-Kutta fixed order
		- Leap Frog @done(2014-11-05)
		- generic linear multistep
		- Runge-kutta 45 and 23 ftw
	
	PDE Solvers:
		The intention is for simple 1D problems (Burgers eq'n, etc)
		- Finite difference 
		- Finite Volume
		- DG methods
